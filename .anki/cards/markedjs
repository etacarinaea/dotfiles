<script type="text/javascript">
(function() {
  if(window.marked == null) {
    let script = document.createElement("script");
    script.onload = markdown;
    script.type = "text/javascript";
    script.src = "https://cdn.jsdelivr.net/npm/marked/marked.min.js";
    document.head.appendChild(script);
    return;
  }
  let inlineRenderer = new marked.Renderer();
  inlineRenderer.paragraph = (text) => { return text; };
  marked.setOptions({
    renderer: inlineRenderer,
    gfm: true
  });
  const content = document.querySelector(".content");
  const it = document.createTreeWalker(content, NodeFilter.SHOW_TEXT, null, false);
  let node;
  let nodeArray = []
  // Create an array first so the iterator doesn't get messed up when we edit
  // things
  while(node = it.nextNode()) {
    nodeArray.push(node);
  }
  for(let i = 0; i < nodeArray.length; ++i) {
    node = nodeArray[i];
    if(node.textContent.substring(0, 2) === "\\(" ||
       node.textContent === "" || node.textContent === " " ||
       node.textContent === ">")) continue;
    let newNode = document.createElement("span");
    // Some text nodes have a lot of unecessary whitespace which the markdown
    // parser interprets as a code block. I don't really use code blocks so I
    // just ditch them completely by replacing whitespace at the beggining of
    // the line with one space
    newNode.innerHTML = marked(node.textContent.replace(/^\s+/g," "));
    node.parentNode.insertBefore(newNode, node);
    node.parentNode.removeChild(node);
  }
})();
</script>
