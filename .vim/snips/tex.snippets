snippet bega "Article" bA
\documentclass{article}
	\usepackage[paper=a4paper,margin=1in]{geometry}
	\title{$1\vspace{-2ex}}
	\date{$2}

\begin{document}
\maketitle

$0

\end{document}
endsnippet

snippet begem "Math exercise sheet" bA
\documentclass[fleqn]{article}
	\usepackage[paper=a4paper,margin=1in]{geometry}
	\usepackage{enumitem}
	\usepackage{listings}
	\usepackage{amsmath}
	\usepackage{amsthm}
	\usepackage{amssymb}
	%\usepackage{mathtools}
	%\usepackage{tikz}
	\title{\vspace{-4ex}$1 --- $2}
	\date{$3}

\begin{document}
\maketitle
\hspace*{-\parindent}
\begin{minipage}[t]{0.5\textwidth}
	\begin{tabular}{@{}ll}
		Name:& $4
	\end{tabular}
\end{minipage}
\begin{minipage}[t]{0.5\textwidth}
	\begin{tabular}{@{}ll}
		Tutor:& $5
	\end{tabular}
\end{minipage}
\vspace{1em}

\section*{$6}
\begin{enumerate}[label=\alph*)]
	\item $0
\end{enumerate}

\end{document}
endsnippet


snippet dm "Math" wA
\[
	$1
\]$0
endsnippet


snippet inna "in Natural" wA
\in \mathbb{N}
endsnippet
snippet inz "in Integers" wA
\in \mathbb{Z}
endsnippet
snippet inq "in Rational" wA
\in \mathbb{Q}
endsnippet
snippet inr "in Real" wA
\in \mathbb{R}
endsnippet
snippet incx "in Complex" wA
\in \mathbb{C}
endsnippet

snippet ... "Ellipsis" iA
\ldots
endsnippet

snippet '([A-Za-z(){}])_(.)' "auto subscript" rA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1}$0
endsnippet

snippet '([A-Za-z(){}])\^(.)' "auto superscript" rA
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`$1}$0
endsnippet

snippet sum "Sum" i
\\sum_{${1:i} = ${2:1}}^{${3:\\infty}}$0
endsnippet

snippet frac "Fraction" i
\\frac{$1}{$2}$0
endsnippet


snippet '([A-Za-z])(\.,)' "Vector" riA
\textrm{\pmb{`!p snip.rv=match.group(1)`}}$0
endsnippet

global !p
def matrix(snip):
	currentLine = re.match(r'([pvb])?mat(rix)?(\d+)x(\d+)', snip.buffer[snip.line].strip())
	t = currentLine.group(1)
	m = currentLine.group(3)
	n = currentLine.group(4)
	snip.buffer[snip.line] = ""
	result = "\\begin{" + t + "matrix}\n"
	for i in range(int(m)):
		row = ""
		for j in range(int(n)):
			row += "$" + str((j+1)+i*int(n))
			if ((j+1) % int(n)) == 0 :
				if (i+1) == int(m):
					row += "\n"
				else:
					row += " \\\\\\\\\n"
			else:
				row += " & "
		result += row
	result += "\\end{" + t + "matrix}$0"
	snip.expand_anon(result)
endglobal
pre_expand "matrix(snip)"
snippet "([pvb])?mat(rix)?(\d+)x(\d+)" "Generate matrix" br
endsnippet


snippet lp( "Parentheses" i
\left($1\right)$0
endsnippet
snippet langle "Angle brackets" i
\langle $1 \rangle$0
endsnippet

snippet => "Implication" iA
\implies
endsnippet
snippet <=> "Equivalence" iA
\iff
endsnippet

snippet norm "Norm" i
\left\lVert $1 \right\rVert$0
endsnippet

snippet innerp "Inner product" iA
\langle $1, $2 \rangle$0
endsnippet
