#!/bin/bash
#
# values  0-15: color
#        16-18: foreground, background, cursorColor
#        19-21: font, size, pixelsize
#           22: borderwidth
#           23: gapwidth
#           24: wallpaper


# expect a file as input
if [ $1 == "-u" ]; then
    configfile=$2
elif [ ! $1 ] || [ ! -r $1 ]; then
    echo "File is required. Aborting..."
    exit 1
else
    configfile=$1
fi


# assign variable values from file to "values" array
for num in {0..24}; do
    # if true = normal terminal colour
    if (( $num <= 15 )); then # matches the whole line color$num appears in # I don't expect any comments/etc on the same line or
        # color$num appearing somwhere else
        values[$num]=$(grep -Eo "^color$num:.*" $configfile)
        # remove everything but the hex code
        values[$num]=${values[$num]##* }
    else
        case $num in
            16 ) pattern="foreground";;
            17 ) pattern="background";;
            18 ) pattern="cursorColor";;
            19 ) pattern="font";;
            20 ) pattern="size";;
            21 ) pattern="pixelsize";;
            22 ) pattern="borderwidth";;
            23 ) pattern="gapwidth";;
            24 ) pattern="wallpaper";;
        esac
        values[$num]=$(grep -Eo "^$pattern:.*" $configfile)
        values[$num]=${values[$num]##* }
    fi
done

# just do it
changewall "${values[24]}"

# === old === #
# there's probably a better way but I'm too tired to come up with one right now

#variable replacement
function xresources {
    sed -i --follow-symlinks "s/$1:.*/$1:$whitespace$2/g" \
        $HOME/.Xresources
}
function xresfont {
    sed -i --follow-symlinks "s/$1:.*/$1:${whitespace}xft:$2:pixelsize=$3/g" \
        $HOME/.Xresources
}
function awesome {
    sed -i --follow-symlinks "s/^$1.*/$1$whitespace= \"$2\"/g" \
        $HOME/.config/awesome/yuki/theme.lua
}
function awesomerc {
    sed -i --follow-symlinks "s/^$1.*/$1$whitespace= \"$2\"/g" \
        $HOME/.config/awesome/rc.lua
}
#variable replacement
function json {
    sed -i --follow-symlinks "s/$1\":.*\"/$1\":$whitespace\"$2\"/g" \
        $HOME/workspace/startpage/config.json
}
#variable replacement file
function css {
    sed -i --follow-symlinks "s/$1:.*/$1: $2;/g" \
        $HOME/.mozilla/firefox/yuki/chrome/$3
}
#img color
#function steam {
#    convert $HOME/.local/share/Steam/skins/Deshou\ STEAM/graphics/$1 \
#        -alpha extract -threshold 0 -transparent black -fill "$2" \
#        -opaque white $HOME/.local/share/Steam/skins/Deshou\ STEAM/graphics/$1
#}
#variable color
#function steamstyle {
#    sed -i --follow-symlinks "s/$1=\".*/$1=\"$2\"\r/g" \
#        $HOME/.local/share/Steam/skins/Deshou\ STEAM/resource/styles/steam.styles
#}
#variable value(color)
function appchanx {
    sed -i --follow-symlinks "s/\"$1\":.*/\"$1\": \"$2\",/g" $HOME/.appchanx-theme.json
}


# I think I'm using a loop here to make editing easier, but it looks stupid to me
for num in {0..23}; do
    # .Xresources
    case $num in
        0 ) whitespace="           " && xresources "color0" ${values[$num]};;
        1 ) whitespace="           " && xresources "color1" ${values[$num]};;
        2 ) whitespace="           " && xresources "color2" ${values[$num]};;
        3 ) whitespace="           " && xresources "color3" ${values[$num]};;
        4 ) whitespace="           " && xresources "color4" ${values[$num]};;
        5 ) whitespace="           " && xresources "color5" ${values[$num]};;
        6 ) whitespace="           " && xresources "color6" ${values[$num]};;
        7 ) whitespace="           " && xresources "color7" ${values[$num]};;
        8 ) whitespace="           " && xresources "color8" ${values[$num]};;
        9 ) whitespace="           " && xresources "color9" ${values[$num]};;
        10) whitespace="          " && xresources "color10" ${values[$num]};;
        11) whitespace="          " && xresources "color11" ${values[$num]};;
        12) whitespace="          " && xresources "color12" ${values[$num]};;
        13) whitespace="          " && xresources "color13" ${values[$num]};;
        14) whitespace="          " && xresources "color14" ${values[$num]};;
        15) whitespace="          " && xresources "color15" ${values[$num]};;
        16) whitespace="       " && xresources "foreground" ${values[$num]};;
        17) whitespace="       " && xresources "background" ${values[$num]};;
        18) whitespace="      " && xresources "cursorColor" ${values[$num]};;
        19) whitespace="             " && xresfont "font" ${values[$num]} ${values[$num+2]}
            whitespace="         " && xresfont "boldFont" ${values[$num]} ${values[$num+2]};;
    esac

    # .config/awesome/yuki/theme.lua
    case $num in
        0 ) whitespace=" " && awesome "theme.border_normal" ${values[$num]}
            whitespace="  " && awesome "theme.border_focus" ${values[$num]}
            whitespace=" " && awesome "theme.border_marked" ${values[$num]}
            whitespace="     " && awesome "theme.bg_normal" ${values[$num]}
            whitespace="      " && awesome "theme.bg_focus" ${values[$num]};;
        1 ) whitespace="      " && awesome "theme.fg_focus" ${values[$num]};;
        16) whitespace="     " && awesome "theme.fg_normal" ${values[$num]};;
        17) whitespace="   " && awesome "theme.bg_minimize" ${values[$num]};;
        19) whitespace="          " && awesome "theme.font" "${values[$num]} ${values[$num+1]}" ;;
        22) whitespace="  " && awesome "theme.border_width" ${values[$num]};;
        23) whitespace=" " && awesomerc "theme.useless_gap_width" ${values[$num]};;
    esac

    # Startpage config.json
    case $num in
        0 ) whitespace="           " && json "foreground" ${values[$num]};;
        1 ) whitespace="        " && json "heading_color" ${values[$num]}
            whitespace="         " && json "border_color" ${values[$num]};;
        16) whitespace="           " && json "link_color" ${values[$num]}
            whitespace="         " && json "search_color" ${values[$num]}
            whitespace="      " && json "search_bg_color" "rgba(110,110,110,0.1)";;
        17) whitespace="           " && json "background" ${values[$num]};;
        19) whitespace="         " && json "heading_font" ${values[$num]}
            whitespace="            " && json "link_font" ${values[$num]};;
        21) whitespace="    " && json "heading_font_size" "${values[$num]}px"
            whitespace="       " && json "link_font_size" "${values[$num]}px";;
    esac

    # Firefox userChrome.css
    file="userChrome.css"
    case $num in
        0 ) css "--tab-background" ${values[$num]} $file;;
        16) css "--tab-foreground" ${values[$num]} $file
            css "--tab-foreground-selected" ${values[$num]} $file;;
        17) css "--tab-background-selected" ${values[$num]} $file;;
    esac

    # Firefox userContent.css
    file="userContent.css"
    case $num in
        0 ) css "--background" ${values[$num]} $file;;
        1 ) css "--red" ${values[$num]} $file;;
        16) css "--foreground" ${values[$num]} $file;;
        17) css "--background-selected" ${values[$num]} $file;;
    esac

    # appchanx theme
    case $num in
        0 ) appchanx "Checkbox Background" ${values[$num]};;
        5 ) appchanx "Hovered Links" ${values[$num]};;
        9 ) appchanx "Names" ${values[$num]}
            appchanx "Sage" ${values[$num]}
            appchanx "Tripcodes" ${values[$num]}
            appchanx "Post Numbers" ${values[$num]}
            appchanx "Warnings" ${values[$num]};;
        13) appchanx "Highlighted Reply Border" ${values[$num]}
            appchanx "Backlinked Reply Outline" ${values[$num]}
            appchanx "Quotelinks" ${values[$num]}
            appchanx "Backlinks" ${values[$num]};;
        15) appchanx "Hovered Navigation Links" ${values[$num]};;
        16) appchanx "Links" ${values[$num]}
            appchanx "Navigation Links" ${values[$num]}
            appchanx "Text" ${values[$num]}
            appchanx "Board Title" ${values[$num]}
            appchanx "Timestamps" ${values[$num]}
            appchanx "Inputs" ${values[$num]};;
        17) appchanx "Background Color" ${values[$num]}
            appchanx "Dialog Background" ${values[$num]}
            appchanx "Reply Background" ${values[$num]}
            appchanx "Highlighted Reply Background" ${values[$num]}
            appchanx "Input Background" ${values[$num]}
            appchanx "Buttons Background" ${values[$num]}
            appchanx "Navigation Background" ${values[$num]};;
    esac


    # Steam
    #rh=$(echo "$hex"|cut -c2-3)
    #gh=$(echo "$hex"|cut -c4-5)
    #bh=$(echo "$hex"|cut -c6-7)
    # 
    #rgba="$((16#$rh)) $((16#$gh)) $((16#$bh)) 255"
    #
    #case $num in
    #    1 ) steam avatarBorderOnline.tga $hex
    #        steam achievementbg_recent.tga $hex
    #        steamstyle "baseHighlight" "$rgba";;
    #    9 ) steam avatarBorderInGame.tga $hex
    #        steamstyle "baseInGame" "$rgba";;
    #    15) steamstyle "baseLight" "$rgba";;
    #    17) steamstyle "baseBackground" "$rgba";;
    #esac

done

# if -u apply colors in all terminals
# https://code.google.com/archive/p/mintty/wikis/Tips.wiki
if [ $1 == "-u" ]; then
    test=""
    for num in {0..15}; do
        test=$test"\033]4;$num;${values[$num]}\007"
    done
    for num in {10..12}; do
        test=$test"\033]$num;${values[$num + 6]}\007"
    done
    for file in /dev/pts/*; do
        [[ $file != "/dev/pts/ptmx" ]] && echo -ne "$test" > $file
    done
fi

xrdb -merge $HOME/.Xresources
